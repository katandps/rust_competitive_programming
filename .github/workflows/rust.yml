name: Rust

on:
  push:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  RUSTDOCFLAGS: --html-in-header /home/runner/work/rust_lib_for_comp/rust_lib_for_comp/katex.html

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v2

      - name: Restore mtime
        run: python ./.github/workflows/git-restore-mtime.py

      - uses: Swatinem/rust-cache@v2

      - name: cargo-fmt
        run: cargo fmt --all -- --check

      - name: cargo-clippy
        run: cargo clippy --workspace --lib --tests

      - name: cargo-build
        run: cargo build --workspace --lib --tests

      - name: cargo-test
        run: cargo test --workspace --no-fail-fast

  snippet:
    name: Snippet
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v2

      - name: Restore mtime
        run: python ./.github/workflows/git-restore-mtime.py

      - uses: Swatinem/rust-cache@v2

      - name: Setup `1.70.0`
        uses: dtolnay/rust-toolchain@1.70.0

      - name: Setup `stable`
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: cargo-install codesnip
        run: cargo install codesnip

      - name: Snippet Verification
        run: cargo codesnip --target=crates/rust_lib_for_comp/lib.rs --filter-item=test --cfg=nightly verify --verbose --toolchain=1.70.0 --edition=2021

  verify:
    name: Verify
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v2

      - name: Restore mtime
        run: python ./.github/workflows/git-restore-mtime.py

      - uses: Swatinem/rust-cache@v2

      - uses: actions/cache@v3
        with:
          path: ~/.cache
          key: testcases

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Install cargo make
        run: cargo install cargo-make

      - name: pre-download library-checker
        run: |
          mkdir -p ~/.cache/rust_judge/library_checker && cd ~/.cache/rust_judge/library_checker
          git init
          git remote add origin https://github.com/yosupo06/library-checker-problems.git
          git pull origin master

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: build
        run: cargo test --release --no-run --features verify,fetch_testcases

      - name: Download Testcases
        run: makers verify-download
        env:
          YUKICODER_TOKEN: ${{ secrets.YUKICODER_TOKEN }}

      - name: Verify
        run: makers verify-run

      - name: Generate coverage
        run: cargo +nightly llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Generate docs
        run: makers rustdoc

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./target/doc

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true
