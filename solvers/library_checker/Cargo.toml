[package]
name = "library_checker_solver"
version = "0.1.0"
edition = "2018"

[dependencies]
prelude = { path = "../../crates/prelude" }
io_util = { path = "../../crates/util/io_util" }
algebra = { path = "../../crates/algebra" }
string_util = { path = "../../crates/util/string_util" }
range_traits = { path = "../../crates/range_traits" }
pollard_rho = { path = "../../crates/algebra/pollard_rho" }
addition = { path = "../../crates/algebra/binary_operation/addition" }
minimization = { path = "../../crates/algebra/binary_operation/minimization" }
disjoint_sparse_table = { path = "../../crates/data_structure/disjoint_sparse_table" }
dynamic_li_chao_tree = { path = "../../crates/data_structure/dynamic_li_chao_tree" }
sparse_table = { path = "../../crates/data_structure/sparse_table" }
segment_tree = { path = "../../crates/data_structure/segment_tree" }
lazy_segment_tree = { path = "../../crates/data_structure/lazy_segment_tree" }
wavelet_matrix = { path = "../../crates/data_structure/wavelet_matrix" }
io_debug = { path = "../../crates/util/io_debug" }
adjacency_list = { path = "../../crates/graph/adjacency_list" }
binary_indexed_tree = { path = "../../crates/data_structure/binary_indexed_tree" }
heavy_light_decomposition = { path = "../../crates/graph/tree/heavy_light_decomposition" }
strongly_connected_components = { path = "../../crates/graph/strongly_connected_components" }
directed_acyclic_graph = { path = "../../crates/graph/directed_acyclic_graph" }
dijkstra = { path = "../../crates/graph/dijkstra" }
floor_sum = { path = "../../crates/geometry/floor_sum" }
slice_bounds = { path = "../../crates/algo/slice_bounds" }

[lib]
path = "lib.rs"
